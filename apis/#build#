currentSlot = 1
turtle.select(1)

function findMaterial()
   for i=1, 16 do
      if turtle.getItemCount(i) > 0 then
	 turtle.select(i)
	 if turtle.compareTo(16) then
	    currentSlot = i
	    return(true)
	 end
      end
   end
   return(false)
end

function buildWall(width, height)
   move.up(1)
   findMaterial()
   for y = 1, height do
      for x = 1, width do
	 if not turtle.placeDown() then
	    if turtle.getItemCount(currentSlot) == 0 then
	       if not findMaterial() then
		  print("Ran out of material")
		  return
	       end
	    end
	    if turtle.detectDown() then
	       if not turtle.digDown() then
		  print("Cant dig down...")
		  return
	       end
	    end
	    if not turtle.placeDown() then
	       print("Cant seem to place down...")
	       return
	    end
	 end
	 if x ~= width  then
	    while not move.forward(1) do
	       print("Cant seem to move...")
	       turtle.attack()
	       os.sleep(5)
	    end
	    
	    
	 end
      end
      move.turnAround()
      move.up(1)
   end
end


function findMaterial()
   for i=1, 16 do
      if turtle.getItemCount(i) > 0 then
	 turtle.select(i)
	 if turtle.compareTo(16) then
	    currentSlot = i
	    return(true)
	 end
      end
   end
   return(false)
end

function placeBlock ()
   if turtle.getItemCount(currentSlot) == 0 or not turtle.compareTo(16) then
      if not findMaterial() then
	 print("Ran out of material")
	 return
      end
   end
   if not turtle.compareDown() then
      if not turtle.placeDown() then
	 if turtle.detectDown() then
	    if not turtle.digDown() then
	       print("Cant dig down...")
	       return
	    end
	 end
	 if not turtle.placeDown() then
	    print("Cant seem to place down...")
	    return
	 end
      end
   end
end
function continueForward()
   while not move.forward(1) do
      print("Cant seem to move...")
      turtle.attack()
      os.sleep(5)
   end
end

function continueDiag()
   move.turnLeft()
   continueForward()
   move.turnRight()
   continueForward()
end


function buildVert(verts)
   for i = 1, verts do
      placeBlock()
      if i ~= verts then
	 continueForward()
      end
   end
end
   
function buildDiag (diags)
   for i = 0, diags do
      continueDiag()
      if i ~= diags then
	 placeBlock()
      end
   end
   move.turnLeft()
end


function tower(hight, verts, diags)
   currentSlot = 1
   turtle.select(1)

   move.forward(verts % 2 + diags + 1 ) 
   move.turnRight()
   move.forward(verts % 2 + 1)
   move.turnAround()
   
   

   for i = 1, hight do
      for i = 1, 4 do
	 buildVert(verts)
	 buildDiag(diags)
      end
      move.up(1)
   end
end


function floor(width, height)
   local startingPos = move.getPos()
   for i = 1, width do
      for j = 1, height do
	 placeBlock()
	 if height ~= j then
	    move.forward(1)
	 end
      end

      if i % 2 == 0 then
	 move.turnLeft()
	 move.forward(1)
	 move.turnLeft()
      else
	 move.turnRight()
	 move.forward(1)
	 move.turnRight()
      end
   end
   move.goto(
end
	 
